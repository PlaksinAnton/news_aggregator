---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  schemas:
    AppUser:
      type: object
      properties:
        name:
          type: string
          example: Anton
        email:
          type: string
          example: aplaksin2000@gmail.com
        preferences:
          type: string
          example: I like reading news about eroupean politics and science
paths:
  "/app_users":
    get:
      summary: Retrieves a list of app users
      tags:
      - UI
      responses:
        '200':
          description: Depicts current app users
    post:
      summary: Creates a new app user
      tags:
      - UI
      parameters: []
      responses:
        '302':
          description: Redirects to the User view
      requestBody:
        content:
          application/x-www-form-urlencoded;charset=UTF-8:
            schema:
              type: object
              properties:
                authenticity_token:
                  type: string
                  description: CSRF token
                  example: RbvulqBFVlGQfZzTTxVDD07J6laRVQVdsWMnlZNEC6rUXjg5yiaSn9KhE4zYTnWeHHfddeFpNk0-hGrC4VltIQ
                app_user:
                  "$ref": "#/components/schemas/AppUser"
                commit:
                  type: string
                  description: Submit button value
                  example: Create App user
              required:
              - authenticity_token
              - app_user
              - commit
  "/app_users/{id}":
    get:
      summary: Retrieves a specific app user
      tags:
      - UI
      responses:
        '200':
          description: Depicts specidied app user
    put:
      summary: Updates a specific app user
      tags:
      - UI
      parameters: []
      responses:
        '302':
          description: App user updated
      requestBody:
        content:
          application/x-www-form-urlencoded;charset=UTF-8:
            schema:
              type: object
              properties:
                authenticity_token:
                  type: string
                  description: CSRF token
                  example: RbvulqBFVlGQfZzTTxVDD07J6laRVQVdsWMnlZNEC6rUXjg5yiaSn9KhE4zYTnWeHHfddeFpNk0-hGrC4VltIQ
                app_user:
                  "$ref": "#/components/schemas/AppUser"
                commit:
                  type: string
                  description: Submit button value
                  example: Create App user
              required:
              - authenticity_token
              - app_user
              - commit
    delete:
      summary: Deletes a specific app user
      tags:
      - UI
      parameters: []
      responses:
        '303':
          description: App user deleted
      requestBody:
        content:
          application/x-www-form-urlencoded;charset=UTF-8:
            schema:
              type: object
              properties:
                authenticity_token:
                  type: string
                  description: CSRF token
                  example: RbvulqBFVlGQfZzTTxVDD07J6laRVQVdsWMnlZNEC6rUXjg5yiaSn9KhE4zYTnWeHHfddeFpNk0-hGrC4VltIQ
              required:
              - authenticity_token
              - app_user
              - commit
    post:
      summary: Make news request to a queue for spesified user
      tags:
      - News logic
      parameters: []
      responses:
        '303':
          description: Redirects to user view
      requestBody:
        content:
          application/x-www-form-urlencoded;charset=UTF-8:
            schema:
              type: object
              properties:
                authenticity_token:
                  type: string
                  description: CSRF token
                  example: RbvulqBFVlGQfZzTTxVDD07J6laRVQVdsWMnlZNEC6rUXjg5yiaSn9KhE4zYTnWeHHfddeFpNk0-hGrC4VltIQ
              required:
              - authenticity_token
              - app_user
              - commit
  "/callback":
    post:
      summary: Callback for getting realtime updates about news request status
      tags:
      - News logic
      parameters: []
      responses:
        '200':
          description: User view updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                app_user:
                  type: object
                  properties:
                    use_id:
                      type: integer
                      example: '1'
                    message:
                      type: string
                      example: Message sent! Check your Email.
servers:
- url: http://127.0.0.1:8081
