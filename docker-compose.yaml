services:
  user_manager:
    build: ./managers/user

    image: user_manager_image
    container_name: user_manager_container

    ports:
      - "8081:3000"
    environment:
      RAILS_ENV: production
      # DATABASE_URL: mysql2://root:${MYSQL_ROOT_PASSWORD}@users_db:3306/users_db
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      DB_HOST: users_db
      DATABASE_NAME: users_db
    # depends_on:
    #   - users_db
    depends_on:
      rabbitmq:
        condition: service_healthy
      users_db:
        condition: service_started
    networks:
      - network-dapr


  dapr_user_manager:
    image: daprio/daprd:latest
    container_name: dapr_user_manager_container

    command: [
      "./daprd",
      "-app-port", "3000",
      "-app-id", "user_manager", # Invoke name
      "-app-protocol", "http",
      "-dapr-http-port", "3500",
      "-resources-path", "./components",
      # "-config", "/components/config.yaml",
      "-dapr-grpc-port", "50001"
    ]
    depends_on:
      - user_manager
    volumes:
      - ./components:/components 
    network_mode: "service:user_manager"

#------------------------------------

  news_manager:
    build: ./managers/news

    image: news_manager_image
    container_name: news_manager_container # Only for bash

    ports:
      - "8082:8082"
    # logging:
    #   driver: "json-file" #
    #   options:
    #     max-size: "2m"
    #     max-file: "2"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - network-dapr

  dapr_news_manager:
    image: daprio/daprd:latest
    container_name: dapr_news_manager_container

    command: [
      "./daprd",
      "-app-port", "8082",
      "-app-id", "news_manager", # Invoke name
      "-app-protocol", "http",
      "-dapr-http-port", "3500",
      "-resources-path", "./components",
      # "-config", "/components/config.yaml",
      "-dapr-grpc-port", "50001"
    ]
    depends_on:
      - news_manager
    volumes:
      - ./components:/components 
    network_mode: "service:news_manager"

#------------------------------------
# Accessors
#------------------------------------

  ai_summarizer:
    build: ./accessors/ai_summarizer

    image: ai_summarizer_image
    container_name: ai_summarizer_container

    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    ports:
      - "8084:8084"
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "2"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - network-dapr


  dapr_ai_summarizer:
    image: daprio/daprd:latest
    container_name: dapr_ai_summarizer_container

    command: [
      "./daprd",
      "-app-port", "8084",
      "-app-id", "ai_summarizer",
      "-app-protocol", "http",
      "-dapr-http-port", "3500",
      "-resources-path", "./components",
      # "-config", "/components/config.yaml",
      "-dapr-grpc-port", "50001"
    ]
    depends_on:
      - ai_summarizer
    volumes:
      - ./components:/components
    network_mode: "service:ai_summarizer"

#------------------------------------

  message_handler:
    build: ./accessors/message_handler

    image: message_handler_image
    container_name: message_handler_container

    ports:
      - "8085:8085"
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "2"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - network-dapr


  dapr_message_handler:
    image: daprio/daprd:latest
    container_name: dapr_message_handler_container

    command: [
      "./daprd",
      "-app-port", "8085",
      "-app-id", "message_handler",
      "-app-protocol", "http",
      "-dapr-http-port", "3500",
      "-resources-path", "./components",
      # "-config", "/components/config.yaml",
      "-dapr-grpc-port", "50001"
    ]
    depends_on:
      - message_handler
    volumes:
      - ./components:/components
    network_mode: "service:message_handler"

#------------------------------------

  news_collector:
    build: ./accessors/news_collector

    image: news_collector_image
    container_name: news_collector_container

    environment:
      - GUARDIAN_API_KEY=${GUARDIAN_API_KEY}
    ports:
      - "8083:8083"
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "2"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - network-dapr


  dapr_news_collector:
    image: daprio/daprd:latest
    container_name: dapr_news_collector_container

    command: [
      "./daprd",
      "-app-port", "8083",
      "-app-id", "news_collector",
      "-app-protocol", "http",
      "-dapr-http-port", "3500",
      "-resources-path", "./components",
      # "-config", "/components/config.yaml",
      "-dapr-grpc-port", "50001"
    ]
    depends_on:
      - news_collector
    volumes:
      - ./components:/components
    network_mode: "service:news_collector"


  # users_db_accessor:
  #   build: ./accessors/users_db_accessor

  #   image: users_db_accessor
  #   container_name: users_db_accessor #Name for easier bash novigation

  #   ports:
  #     - "8082:8082"
  #   # depends_on:
  #   #   - rabbitmq
  #   networks:
  #     - network-dapr

#------------------------------------
# Queue
#------------------------------------

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "5672:5672"    # Port for RabbitMQ messaging
      - "15672:15672"  # Port for RabbitMQ management UI
    # volumes:
    # - ./components:/components
    networks:
      - network-dapr
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

#------------------------------------
# DB
#------------------------------------

  users_db:
    image: mysql:8
    container_name: users_db

    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: users_db
    volumes:
      # - ./db/users_db/entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./db/users_db/db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - network-dapr

networks:
  network-dapr:

